// <auto-generated />
using System;
using Dhanman.MyHome.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dhanman.MyHome.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250522202635_meetingNoteTable")]
    partial class meetingNoteTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CommitteeAllMemberDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EffectiveEndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("effective_end_date");

                    b.Property<DateTime>("EffectiveStartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("effective_start_date");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("member_name");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer")
                        .HasColumnName("portfolio_id");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("portfolio_name");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_name");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_committee_all_member_dto");

                    b.ToTable("committee_all_member_dto", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Dhanan.MyHome.Domain.Entities.Banks.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_number");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bank_name");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("branch_name");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("IFSC")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ifsc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.HasKey("Id")
                        .HasName("pk_banks");

                    b.ToTable("banks", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Authorization.Role", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("description");

                    b.HasKey("Name")
                        .HasName("pk_roles");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Authorization.UserPaidModules", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<long>("PaidModules")
                        .HasColumnType("bigint")
                        .HasColumnName("paid_modules");

                    b.HasKey("UserId")
                        .HasName("pk_user_roles");

                    b.ToTable("user_roles", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Authorization.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("RoleName")
                        .HasColumnType("text")
                        .HasColumnName("role_name");

                    b.HasKey("UserId", "RoleName")
                        .HasName("pk_user_paid_modules");

                    b.ToTable("user_paid_modules", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Addresses.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address_line1");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text")
                        .HasColumnName("address_line2");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid")
                        .HasColumnName("city_id");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid")
                        .HasColumnName("country_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid")
                        .HasColumnName("state_id");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("zip_code");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Apartments.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("address_id");

                    b.Property<int>("ApartmentTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("apartment_type_id");

                    b.Property<string>("AssociationName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("association_name");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PAN")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pan");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("TAN")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tan");

                    b.HasKey("Id")
                        .HasName("pk_apartments");

                    b.ToTable("apartments", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.AppartmentTypes.ApartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_apartment_types");

                    b.ToTable("apartment_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.BuildingTypes.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_building_types");

                    b.ToTable("building_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Buildings.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("building_type_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("TotalUnits")
                        .HasColumnType("integer")
                        .HasColumnName("total_units");

                    b.HasKey("Id")
                        .HasName("pk_buildings");

                    b.ToTable("buildings", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Calendars.Calendar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("boolean")
                        .HasColumnName("is_public");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_calendars");

                    b.ToTable("calendars", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Cities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("StateId")
                        .HasColumnType("uuid")
                        .HasColumnName("state_id");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("zip_code");

                    b.HasKey("Id")
                        .HasName("pk_cities");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.CommitteeMembers.CommitteeMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateTime>("EffectiveEndDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("effective_end_date");

                    b.Property<DateTime>("EffectiveStartDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("effective_start_date");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("integer")
                        .HasColumnName("portfolio_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_committee_members");

                    b.ToTable("committee_members", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.CommitteeMembers.CommitteeMemberDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("member_name");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_committee_member_dto");

                    b.ToTable("committee_member_dto", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.CommunityCalenders.CommunityCalender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_community_calenders");

                    b.ToTable("community_calenders", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsApartment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_apartment");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid")
                        .HasColumnName("organization_id");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Complaints.Complaint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer")
                        .HasColumnName("department_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DocLink")
                        .HasColumnType("text")
                        .HasColumnName("doc_link");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("boolean")
                        .HasColumnName("is_urgent");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<DateTime>("OccuredDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("occured_date");

                    b.Property<DateTime>("PrefferedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("preffered_date");

                    b.Property<DateTime>("PrefferedTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("preffered_time");

                    b.Property<int>("PriorityId")
                        .HasColumnType("integer")
                        .HasColumnName("priority_id");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("sub_category_id");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.HasKey("Id")
                        .HasName("pk_complaint");

                    b.ToTable("complaint", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Countries.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("ISOAlphaCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("iso_alpha_code");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_countries");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.DeliveryCompanies.DeliveryCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<int>("DeliveryCompanyCategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_company_category_id");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_delivery_companies");

                    b.ToTable("delivery_companies", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.DeliveryCompanyCategories.DeliveryCompanyCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_delivery_company_categories");

                    b.ToTable("delivery_company_categories", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.EventOccurrenceStatuses.EventOccurrenceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_event_occurrence_status");

                    b.ToTable("event_occurrence_status", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.EventOccurrences.EventOccurrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_time");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid")
                        .HasColumnName("event_id");

                    b.Property<int>("EventOccurrenceStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("EventOccurrenceStatusId");

                    b.Property<bool>("GeneratedFromRecurrence")
                        .HasColumnType("boolean")
                        .HasColumnName("generated_from_recurrence");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<DateTime>("OccurrenceDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("occurrence_date");

                    b.Property<string>("RecordingUrl")
                        .HasColumnType("text")
                        .HasColumnName("recording_url");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_time");

                    b.HasKey("Id")
                        .HasName("pk_event_occurrences");

                    b.ToTable("event_occurrences", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.EventParticipants.EventParticipant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid")
                        .HasColumnName("event_id");

                    b.Property<int>("EventStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("event_status_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<bool>("NotificationSent")
                        .HasColumnType("boolean")
                        .HasColumnName("notification_sent");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_event_participants");

                    b.ToTable("event_participants", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.EventStatuses.EventStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_event_status");

                    b.ToTable("event_status", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.EventTypes.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_event_types");

                    b.ToTable("event_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Events.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("CommunityCalenderId")
                        .HasColumnType("integer")
                        .HasColumnName("community_calender_id");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("company_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_time");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("event_type_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("boolean")
                        .HasColumnName("is_recurring");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<DateTime?>("RecurrenceEndDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("recurrence_end_date");

                    b.Property<string>("RecurrenceRule")
                        .HasColumnType("text")
                        .HasColumnName("recurrence_rule");

                    b.Property<int>("RecurrenceRuleId")
                        .HasColumnType("integer")
                        .HasColumnName("recurrence_rule_id");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_events");

                    b.ToTable("events", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.FacilityBookings.FacilityBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer")
                        .HasColumnName("building_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid")
                        .HasColumnName("event_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_facility_bookings");

                    b.ToTable("facility_bookings  ", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Floors.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer")
                        .HasColumnName("building_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("TotalUnits")
                        .HasColumnType("integer")
                        .HasColumnName("total_units");

                    b.HasKey("Id")
                        .HasName("pk_floors");

                    b.ToTable("floors", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.GateTypes.GateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_gate_types");

                    b.ToTable("gate_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Gates.Gate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer")
                        .HasColumnName("building_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<int>("GateTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("gate_type_id");

                    b.Property<bool>("IsAllUsersAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_all_users_allowed");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsResidentsAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_residents_allowed");

                    b.Property<bool>("IsStaffAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_staff_allowed");

                    b.Property<bool>("IsUsedForIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_used_for_in");

                    b.Property<bool>("IsUsedForOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_used_for_out");

                    b.Property<bool>("IsVendorAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_vendor_allowed");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_gates");

                    b.ToTable("gates", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.GuestApprovals.GuestApproval", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("approved_by");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<long>("VisitorLogId")
                        .HasColumnType("bigint")
                        .HasColumnName("visitor_log_id");

                    b.Property<int?>("VisitorStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_status_id");

                    b.HasKey("Id")
                        .HasName("pk_guest_approvals");

                    b.ToTable("guest_approvals", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.IdentityTypes.IdentityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_identity_types");

                    b.ToTable("identity_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MeetingActionItems.MeetingActionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("action_description");

                    b.Property<Guid?>("AssignedToUserId")
                        .HasColumnType("uuid")
                        .HasColumnName("assigned_to_user_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("due_date");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("OccurrenceId")
                        .HasColumnType("integer")
                        .HasColumnName("occurrence_id");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_meeting_action_items");

                    b.ToTable("meeting_action_items", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MeetingAgendaItems.MeetingAgendaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("ItemText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item_text");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("OccurrenceId")
                        .HasColumnType("integer")
                        .HasColumnName("occurrence_id");

                    b.Property<int>("OrderNo")
                        .HasColumnType("integer")
                        .HasColumnName("order_no");

                    b.HasKey("Id")
                        .HasName("pk_meeting_agenda_items");

                    b.ToTable("meeting_agenda_items", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MeetingNotes.MeetingNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("NoteText")
                        .HasColumnType("text")
                        .HasColumnName("note_text");

                    b.Property<int>("OccurrenceId")
                        .HasColumnType("integer")
                        .HasColumnName("occurrence_id");

                    b.HasKey("Id")
                        .HasName("pk_meeting_notes");

                    b.ToTable("meeting_notes", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MeetingParticipants.MeetingParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("OccurrenceId")
                        .HasColumnType("integer")
                        .HasColumnName("occurrence_id");

                    b.Property<string>("Role")
                        .HasColumnType("text")
                        .HasColumnName("role");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_meeting_participants");

                    b.ToTable("meeting_participants", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MemberAdditionalDetails.MemberAdditionalDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AboutYourself")
                        .HasColumnType("text")
                        .HasColumnName("about_yourself");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Designation")
                        .HasColumnType("text")
                        .HasColumnName("designation");

                    b.Property<char>("Gender")
                        .HasColumnType("char")
                        .HasColumnName("gender");

                    b.Property<Guid>("HattyId")
                        .HasColumnType("uuid")
                        .HasColumnName("hatty_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("text")
                        .HasColumnName("marital_status");

                    b.Property<string>("MemberType")
                        .HasColumnType("text")
                        .HasColumnName("member_type");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer")
                        .HasColumnName("resident_id");

                    b.Property<Guid?>("SpouseHattyId")
                        .HasColumnType("uuid")
                        .HasColumnName("spouse_hatty_id");

                    b.Property<string>("SpouseName")
                        .HasColumnType("text")
                        .HasColumnName("spouse_name");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_member_additional_details");

                    b.ToTable("member_additional_details", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MemberRequests.MemberRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutYourSelf")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("about_yourself");

                    b.Property<int>("CommunityRequestStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("community_request_status_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<Guid>("CurrentAddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("current_address_id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("designation");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.Property<Guid>("HattyId")
                        .HasColumnType("uuid")
                        .HasColumnName("hatty_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("marital_status");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("member_type");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("mobile_number");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Guid>("SpouseHattyId")
                        .HasColumnType("uuid")
                        .HasColumnName("spouse_hatty_id");

                    b.Property<string>("SpouseName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("spouse_name");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_community_resident_requests");

                    b.ToTable("community_resident_requests", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.MultiUnitVisits.MultiUnitVisit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.Property<int>("VisitorLogId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_log_id");

                    b.Property<int>("Visitor_Statuses")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_statuses");

                    b.HasKey("Id")
                        .HasName("pk_multi_unit_visits");

                    b.ToTable("multi_unit_visits", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.OccupancyTypes.OccupancyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_occupancy_types");

                    b.ToTable("occupancy_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.OccupantTypes.OccupantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_occupant_types");

                    b.ToTable("occupant_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Organizations.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_organizations");

                    b.ToTable("organizations", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Pins.Pin", b =>
                {
                    b.Property<int>("ServiceProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceProviderId"));

                    b.Property<int>("DeliveryId")
                        .HasColumnType("integer")
                        .HasColumnName("delivery_id");

                    b.Property<DateTime>("EffectiveEndDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("effective_end_date_time");

                    b.Property<DateTime>("EffectiveStartDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("effective_start_date_time");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<char>("PinCode")
                        .HasColumnType("character(1)")
                        .HasColumnName("pin_code");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_id");

                    b.HasKey("ServiceProviderId")
                        .HasName("pk_pins");

                    b.ToTable("pins", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Portfolios.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_portfolios");

                    b.ToTable("portfolios", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ResidentRequests.ResidentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer")
                        .HasColumnName("building_id");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<Guid>("MemberAdditionalDetailsId")
                        .HasColumnType("uuid")
                        .HasColumnName("member_additional_details_id");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("OccupancyStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("occupancy_status_id");

                    b.Property<Guid>("PermanentAddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("permanent_address_id");

                    b.Property<int>("RequestStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("request_status_id");

                    b.Property<int>("ResidentTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("resident_type_id");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id")
                        .HasName("pk_resident_requests");

                    b.ToTable("resident_requests", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ResidentStatuses.ResidentRequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_resident_request_statuses");

                    b.ToTable("resident_request_statuses", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ResidentTokens.ResidentToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("FCMToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fcm_token");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer")
                        .HasColumnName("resident_id");

                    b.HasKey("Id")
                        .HasName("pk_resident_tokens");

                    b.ToTable("resident_tokens", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ResidentTypes.ResidentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_resident_types");

                    b.ToTable("resident_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ResidentUnits.ResidentUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<int>("ResidentId")
                        .HasColumnType("integer")
                        .HasColumnName("resident_id");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id")
                        .HasName("pk_resident_units");

                    b.ToTable("resident_units", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Residents.Resident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("OccupancyStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("occupancy_status_id");

                    b.Property<Guid?>("PermanentAddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("permanent_address_id");

                    b.Property<int>("ResidentTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("resident_type_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_residents");

                    b.ToTable("residents", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviderLogs.ServiceProviderLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<int>("CurrentStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("current_status_id");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("entry_time");

                    b.Property<DateTime>("ExitTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("exit_time");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_id");

                    b.Property<int>("VisitPurposeId")
                        .HasColumnType("integer")
                        .HasColumnName("visit_purpose_id");

                    b.Property<string>("VisitingFrom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visiting_from");

                    b.Property<int>("VisitingUnitId")
                        .HasColumnType("integer")
                        .HasColumnName("visiting_unit_id");

                    b.HasKey("Id")
                        .HasName("pk_service_provider_logs");

                    b.ToTable("service_provider_logs", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviderSubTypes.ServiveProviderSubType", b =>
                {
                    b.Property<int>("ServiceProviderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_type_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceProviderTypeId"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("ServiceProviderTypeId")
                        .HasName("pk_service_provider_sub_types");

                    b.ToTable("service_provider_sub_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviderTicketCategories.ServiceProviderTicketCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_id");

                    b.Property<int>("TicketCategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_category_id");

                    b.HasKey("Id")
                        .HasName("pk_service_provider_ticket_categories");

                    b.HasIndex("ServiceProviderId")
                        .HasDatabaseName("ix_service_provider_ticket_categories_service_provider_id");

                    b.HasIndex("TicketCategoryId")
                        .HasDatabaseName("ix_service_provider_ticket_categories_ticket_category_id");

                    b.ToTable("service_provider_ticket_categories", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviderTypes.ServiceProviderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_service_provider_types");

                    b.ToTable("service_provider_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviderVerifications.ServiceProviderVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("boolean")
                        .HasColumnName("is_verified");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("integer")
                        .HasColumnName("service_Provider_id");

                    b.Property<int>("VerificationTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("verification_type_id");

                    b.HasKey("Id")
                        .HasName("pk_service_provider_verifications");

                    b.ToTable("service_provider_verifications", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviders.ServiceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<byte[]>("IdentityImage")
                        .HasColumnType("bytea")
                        .HasColumnName("identity_image");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("identity_number");

                    b.Property<int>("IdentityTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("identity_type_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsFrequentVisitor")
                        .HasColumnType("boolean")
                        .HasColumnName("is_frequent_visitor");

                    b.Property<bool>("IsHireable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_hireable");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("boolean")
                        .HasColumnName("is_visible");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<Guid>("PermanentAddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("permanent_address_id");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pin");

                    b.Property<bool>("PoliceverificationStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("policeverification_status");

                    b.Property<Guid>("PresentAddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("present_address_id");

                    b.Property<int>("ServiceProviderSubTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_sub_type_id");

                    b.Property<int>("ServiceProviderTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_type_id");

                    b.Property<DateTime>("ValidityDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("validity_date");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("VisitingFrom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visiting_from");

                    b.HasKey("Id")
                        .HasName("pk_service_providers");

                    b.ToTable("service_providers", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.States.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid")
                        .HasColumnName("country_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_states");

                    b.ToTable("states", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.SubCategories.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_sub_categories");

                    b.ToTable("sub_categories", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.TicketCategories.TicketCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_ticket_categories");

                    b.ToTable("ticket_categories", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.TicketPriorities.TicketPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_ticket_priorities");

                    b.ToTable("ticket_priorities", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.TicketStatuses.TicketStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_ticket_statuses");

                    b.ToTable("ticket_statuses", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.TicketWorkflows.TicketWorkFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsInitial")
                        .HasColumnType("boolean")
                        .HasColumnName("is_initial");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("NextStatus")
                        .HasColumnType("integer")
                        .HasColumnName("next_status");

                    b.Property<int>("PreviousStatus")
                        .HasColumnType("integer")
                        .HasColumnName("previous_status");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_ticket_workflow");

                    b.ToTable("ticket_workflow", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Tickets.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int?>("TicketAssignedTo")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_assigned_to");

                    b.Property<int>("TicketCategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_category_id");

                    b.Property<int>("TicketPriorityId")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_priority_id");

                    b.Property<int>("TicketStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_status_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id")
                        .HasName("pk_tickets");

                    b.ToTable("tickets", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Tickets.TicketServiceProviderOtp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expiration_time");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("otp");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uuid")
                        .HasColumnName("ticket_id");

                    b.HasKey("Id")
                        .HasName("pk_ticket_service_provider_otps");

                    b.HasIndex("TicketId")
                        .HasDatabaseName("ix_ticket_service_provider_otps_ticket_id");

                    b.ToTable("ticket_service_provider_otps", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.UnitServiceProviders.UnitServiceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("ServiceProviderId")
                        .HasColumnType("integer")
                        .HasColumnName("service_provider_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id")
                        .HasName("pk_unit_service_providers");

                    b.ToTable("unit_service_providers", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.UnitStatuses.UnitStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_unit_statuses");

                    b.ToTable("unit_statuses", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.UnitTypes.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_unit_types");

                    b.ToTable("unit_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.UnitVehicleLimits.UnitVehicleLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarLimit")
                        .HasColumnType("integer")
                        .HasColumnName("car_limit");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("NoOfCarsAllotted")
                        .HasColumnType("integer")
                        .HasColumnName("no_of_cars_allotted");

                    b.Property<int>("NoOfTwoWheelarsAllotted")
                        .HasColumnType("integer")
                        .HasColumnName("no_of_two_wheelars_allotted");

                    b.Property<int>("TwoWheelarsLimit")
                        .HasColumnType("integer")
                        .HasColumnName("two_wheelars_limit");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.HasKey("Id")
                        .HasName("pk_unit_vehicle_limits");

                    b.ToTable("unit_vehicle_limits", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Units.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_id");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<decimal>("Area")
                        .HasColumnType("numeric")
                        .HasColumnName("area");

                    b.Property<decimal>("BHKType")
                        .HasColumnType("numeric")
                        .HasColumnName("bhk_type");

                    b.Property<int>("BuildingId")
                        .HasColumnType("integer")
                        .HasColumnName("building_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<int>("EIntercom")
                        .HasColumnType("integer")
                        .HasColumnName("e_intercom");

                    b.Property<int>("FloorId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("latitude");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("longitude");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("OccupancyTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("occupancy_type_id");

                    b.Property<int>("OccupantTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("occupant_type_id");

                    b.Property<int>("PhoneExtention")
                        .HasColumnType("integer")
                        .HasColumnName("phone_extention");

                    b.Property<int>("UnitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_type_id");

                    b.HasKey("Id")
                        .HasName("pk_units");

                    b.ToTable("units", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid")
                        .HasColumnName("company_id");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("boolean")
                        .HasColumnName("is_owner");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("_passwordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Vehicals.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("VehicleRfid")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_rf_id");

                    b.Property<string>("VehicleRfidSecretCode")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_rf_id_secretCode");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("vehicle_type_id");

                    b.HasKey("Id")
                        .HasName("pk_vehicles");

                    b.ToTable("vehicles", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VehicleTypes.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_vehicle_types");

                    b.ToTable("vehicle_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VerificationTypes.VerificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_verification_types");

                    b.ToTable("verification_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitTypes.VisitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_visit_types");

                    b.ToTable("visit_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorApprovals.VisitorApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<TimeOnly?>("EntryTime")
                        .HasColumnType("time")
                        .HasColumnName("entry_time");

                    b.Property<TimeOnly?>("ExitTime")
                        .HasColumnType("time")
                        .HasColumnName("exit_time");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_number");

                    b.Property<int>("VisitTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("visit_type_id");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_id");

                    b.HasKey("Id")
                        .HasName("pk_visitor_approvals");

                    b.ToTable("visitor_approvals", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorApprovals.VisitorApprovalInfoById", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApartmentName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("apartment_name");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city_name");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<string>("CreatedByFirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by_first_name");

                    b.Property<string>("CreatedByLastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("created_by_last_name");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<TimeOnly>("EntryTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("entry_time");

                    b.Property<TimeOnly>("ExitTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("exit_time");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("unit_name");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_id");

                    b.HasKey("Id")
                        .HasName("pk_visitor_approval_info_by_id");

                    b.ToTable("visitor_approval_info_by_id", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorContacts.VisitorContact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("boolean")
                        .HasColumnName("is_current");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_id");

                    b.HasKey("Id")
                        .HasName("pk_visitor_contacts");

                    b.ToTable("visitor_contacts", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorLogs.AllVisitorLog", b =>
                {
                    b.Property<string>("ContactNumber")
                        .HasColumnType("text")
                        .HasColumnName("contact_number")
                        .HasAnnotation("Relational:JsonPropertyName", "contact_number");

                    b.Property<string>("FirstName")
                        .HasColumnType("text")
                        .HasColumnName("first_name")
                        .HasAnnotation("Relational:JsonPropertyName", "first_name");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name")
                        .HasAnnotation("Relational:JsonPropertyName", "last_name");

                    b.Property<DateTime>("LatestEntryTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("latest_entry_time")
                        .HasAnnotation("Relational:JsonPropertyName", "latest_entry_time");

                    b.Property<DateTime?>("LatestExitTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("latest_exit_time")
                        .HasAnnotation("Relational:JsonPropertyName", "latest_exit_time");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id")
                        .HasAnnotation("Relational:JsonPropertyName", "unit_id");

                    b.Property<string>("UnitName")
                        .HasColumnType("text")
                        .HasColumnName("unit_name")
                        .HasAnnotation("Relational:JsonPropertyName", "unit_name");

                    b.Property<string>("VisitingFrom")
                        .HasColumnType("text")
                        .HasColumnName("visiting_from")
                        .HasAnnotation("Relational:JsonPropertyName", "visiting_from");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_id")
                        .HasAnnotation("Relational:JsonPropertyName", "visitor_id");

                    b.Property<int>("VisitorTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_type_id")
                        .HasAnnotation("Relational:JsonPropertyName", "visitor_type_id");

                    b.Property<string>("VisitorTypeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visitor_type_name")
                        .HasAnnotation("Relational:JsonPropertyName", "visitor_type_name");

                    b.ToTable("all_visitor_logs", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorLogs.VisitorLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<DateTime>("EntryTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("entry_time");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("exit_time");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("VisitingFrom")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visiting_from");

                    b.Property<int>("VisitorId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_id");

                    b.Property<int>("VisitorStatusId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_status_id");

                    b.Property<int>("VisitorTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_type_id");

                    b.HasKey("Id")
                        .HasName("pk_visitor_logs");

                    b.ToTable("visitor_logs", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorStatuses.VisitorStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_visitor_statuses");

                    b.ToTable("visitor_statuses", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorTypes.VisitorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_visitor_types");

                    b.ToTable("visitor_types", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorUnitLogs.VisitorUnitLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer")
                        .HasColumnName("unit_id");

                    b.Property<int>("VisitorLogId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_log_id");

                    b.HasKey("Id")
                        .HasName("pk_visitor_unit_logs");

                    b.ToTable("visitor_unit_logs", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.VisitorVehicles.VisitorVehicles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("VehicleType")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_type");

                    b.Property<int>("VisitorLogId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_log_id");

                    b.HasKey("Id")
                        .HasName("pk_visitor_vehicles");

                    b.ToTable("visitor_vehicles", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Visitors.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uuid")
                        .HasColumnName("apartment_id");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_on_utc");

                    b.Property<DateTime?>("DeletedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_on_utc");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("text")
                        .HasColumnName("identity_number");

                    b.Property<int?>("IdentityTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("identity_type_id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("VisitingFrom")
                        .HasColumnType("text")
                        .HasColumnName("visiting_from");

                    b.Property<int>("VisitorTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_type_id");

                    b.HasKey("Id")
                        .HasName("pk_visitors");

                    b.ToTable("visitors", (string)null);
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Visitors.VisitorDbDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact_number");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_on_utc");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("text")
                        .HasColumnName("identity_number");

                    b.Property<int?>("IdentityTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("identity_type_id");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOnUtc")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modified_on_utc");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("text")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("VisitingFrom")
                        .HasColumnType("text")
                        .HasColumnName("visiting_from");

                    b.Property<int>("VisitorTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("visitor_type_id");

                    b.Property<string>("VisitorTypeName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("visitor_type_name");

                    b.HasKey("Id")
                        .HasName("pk_visitor_db_dto");

                    b.ToTable("visitor_db_dto", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.ServiceProviderTicketCategories.ServiceProviderTicketCategory", b =>
                {
                    b.HasOne("Dhanman.MyHome.Domain.Entities.ServiceProviders.ServiceProvider", null)
                        .WithMany()
                        .HasForeignKey("ServiceProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_service_provider_ticket_categories_service_providers_servic");

                    b.HasOne("Dhanman.MyHome.Domain.Entities.TicketCategories.TicketCategory", null)
                        .WithMany()
                        .HasForeignKey("TicketCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_service_provider_ticket_categories_ticket_category_ticket_c");
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Tickets.TicketServiceProviderOtp", b =>
                {
                    b.HasOne("Dhanman.MyHome.Domain.Entities.Tickets.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ticket_service_provider_otps_tickets_ticket_id");
                });

            modelBuilder.Entity("Dhanman.MyHome.Domain.Entities.Users.User", b =>
                {
                    b.OwnsOne("Dhanman.MyHome.Domain.Entities.Users.ContactNumber", "ContactNumber", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)")
                                .HasColumnName("contact_number");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId")
                                .HasConstraintName("fk_users_users_id");
                        });

                    b.OwnsOne("Dhanman.MyHome.Domain.Entities.Users.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("character varying(256)")
                                .HasColumnName("email");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId")
                                .HasConstraintName("fk_users_users_id");
                        });

                    b.OwnsOne("Dhanman.MyHome.Domain.Entities.Users.FirstName", "FirstName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("first_name");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId")
                                .HasConstraintName("fk_users_users_id");
                        });

                    b.OwnsOne("Dhanman.MyHome.Domain.Entities.Users.LastName", "LastName", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("last_name");

                            b1.HasKey("UserId");

                            b1.ToTable("users");

                            b1.WithOwner()
                                .HasForeignKey("UserId")
                                .HasConstraintName("fk_users_users_id");
                        });

                    b.Navigation("ContactNumber")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("FirstName")
                        .IsRequired();

                    b.Navigation("LastName")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
